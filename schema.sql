CREATE DATABASE IF NOT EXISTS `study`;

USE `study`

CREATE TABLE IF NOT EXISTS `USERS` (
    USER_ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    USERNAME VARCHAR(32) NOT NULL UNIQUE,
    EMAIL VARCHAR(64) NOT NULL UNIQUE,
    PASS binary(60) NOT NULL,
    FNAME VARCHAR(32) NOT NULL,
    LNAME VARCHAR(32) NOT NULL,
    MAJOR varchar(30),
    DEGREE varchar(10),
    EXPECTED_GRAD DATE,
    DATE_JOINED DATETIME DEFAULT CURRENT_TIMESTAMP,
    DATE_UPDATED DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS `CLASSES` (
    USER_ID INTEGER UNSIGNED NOT NULL,
    CLASS_NAME VARCHAR(10) NOT NULL,
    SCHOOL VARCHAR(256) NOT NULL,
    UNIQUE KEY `CLASS_ID` (`USER_ID`,`CLASS_NAME`,`SCHOOL`),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    EXPECTED_END DATE,
    PROF varchar(50),
    DATE_ADDED DATETIME DEFAULT CURRENT_TIMESTAMP,
    DATE_UPDATED DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS `PEERS` (
    USER_ID INTEGER UNSIGNED NOT NULL,
    PEER_ID INTEGER UNSIGNED NOT NULL,
    LIKED BOOLEAN,
    UNIQUE KEY `USER_PEER_ID` (`USER_ID`,`PEER_ID`),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (PEER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    DATE_RATED DATETIME DEFAULT CURRENT_TIMESTAMP,
    DATE_UPDATED DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);